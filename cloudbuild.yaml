######################################################
#
# CURRENT_VERSION: vedi sotto (DRY)
#
# = HISTORY =
#
# gcloud PATH
#root@53c32dc5748a:/# echo $PATH
#/builder/google-cloud-sdk/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

---
options:
    machineType: 'N1_HIGHCPU_8'
timeout: 600s
tags: ['cb-trigger', 'from-sinatroccolo', 'ror5', 'tag-$TAG_NAME']
#images:
#    - 'gcr.io/$PROJECT_ID/ror5-gceregions:cloudbuild'
steps:
    - name: 'gcr.io/cloud-builders/docker'
      id: '[WORKS] docker build manually' # Lets make sure MAKE exists 
      args: ['build', '-t', 'ror5-gceregions:cloudbuild', '.', '-f', 'Dockerfile.rails' ]

    - name: 'gcr.io/cloud-builders/docker'
      id: '[_DUNNO_] docker push (depends on docker build)' # Lets make sure MAKE exists 
      args: ['push', 'ror5-gceregions:cloudbuild' ]

    # # to troubleshoot locally: docker run -it --entrypoint bash gcr.io/cloud-builders/gcloud make
    # - name: 'gcr.io/cloud-builders/gcloud'
    #   id: '[FAILS] gcloud img -> bash app -> make' # Lets make sure MAKE exists
    #   # Error:/usr/bin/make: /usr/bin/make: cannot execute binary file 
    #   entrypoint: 'bash'
    #   args: ['/usr/bin/make', 'docker-build']
      

    #     # 1. Build Dockerfile
    # - name: bash # 'gcr.io/cloud-builders/docker'
    #   id: 00 Lets try make build from another execution strategy without bash
    #   entrypoint: '/usr/bin/make'
    #   args:
    #     - 'docker-build'


    # 1. Build Dockerfile
    # Should waitFor noone, since it can start in parallel
#    - name: 'gcr.io/cloud-builders/docker' # 1. non va WEIRD ERROR
#    - name:  bash # 'gcr.io/cloud-builders/docker'  # non trova Makefile
    - name: 'gcr.io/cloud-builders/gcloud'
      id: 01 Build Docker File with bash and make
      entrypoint: 'bash'
      waitFor: ['-']
      args:
        - '-eEuo'
        - 'pipefail'
        - '-c'
        - |-
          set -x
          echo ciao Im in multiline
          env
          which make
          cat Makefile
          /usr/bin/make docker-build

    # 2. Create tags and pushes them
    - name: 'gcr.io/cloud-builders/gcloud'
      id: 02 Tag locally to both vVER and LATEST and push both
      entrypoint: 'bash'
      args:
          - '-eEuo'
          - 'pipefail'
          - '-c'
          - 'make docker-push-to-gcp'
